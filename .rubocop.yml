AllCops:
  Exclude:
    - "db/schema.rb"
  UseCache: false

# Supports --auto-correct
Layout/ParameterAlignment:
  Description: Align the parameters of a method call if they span more than one line.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-double-indent
  Enabled: true
  EnforcedStyle: with_first_parameter
  SupportedStyles:
  - with_first_parameter
  - with_fixed_indentation

# Supports --auto-correct
Layout/BlockAlignment:
  Description: Align block ends correctly.
  Enabled: true

# Supports --auto-correct
Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - beginning_only
  - empty_lines
  - end_only
  - no_empty_lines

# Supports --auto-correct
Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  Enabled: true

# Supports --auto-correct
Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - empty_lines
  - no_empty_lines

# Supports --auto-correct
Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  Enabled: true
  EnforcedStyle: no_empty_lines
  SupportedStyles:
  - empty_lines
  - no_empty_lines

# Supports --auto-correct
Layout/ExtraSpacing:
  Description: Do not use unnecessary spacing.
  Enabled: true
  AllowForAlignment: true

# Supports --auto-correct
Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true

# Supports --auto-correct
Layout/EndOfLine:
  Description: Use Unix-style line endings.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#crlf
  Enabled: false

Layout/EndAlignment:
  Enabled: false

# Supports --auto-correct
Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true
  Width: 2

# Supports --auto-correct
Layout/SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have or
    don't have surrounding space depending on configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-around-equals
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
Layout/SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space

# Supports --auto-correct
Layout/SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For blocks
    taking parameters, checks that the left brace has or doesn't have trailing space.
  Enabled: true
  EnforcedStyle: space
  SupportedStyles:
  - space
  - no_space
  EnforcedStyleForEmptyBraces: no_space
  SpaceBeforeBlockParameters: true

# Supports --auto-correct
Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: no_space
  SupportedStyles:
  - space
  - no_space

# Use trailing commas, because there are safer in ruby.
Layout/DotPosition:
  Enabled: true
  EnforcedStyle: trailing

# Supports --auto-correct
Layout/FirstHashElementIndentation:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: true
  EnforcedStyle: consistent
  SupportedStyles:
  - special_inside_parentheses
  - consistent

Layout/MultilineOperationIndentation:
  Enabled: false
  EnforcedStyle: indented

Lint/AmbiguousBlockAssociation:
  Enabled: false

Lint/AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation
    without parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-as-args
  Enabled: true

Lint/Debugger:
  Description: Check for debugger calls.
  Enabled: true

Lint/LiteralAsCondition:
  Enabled: false

Lint/ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#parens-no-spaces
  Enabled: true

# Supports --auto-correct
Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: false

Lint/UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: false

Lint/RedundantSplatExpansion:
  Enabled: false

Lint/Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while
    for post-loop tests.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#loop-with-break
  Enabled: false

# Supports --auto-correct
Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscore-unused-vars
  Enabled: false

Metrics/AbcSize:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

Metrics/BlockNesting:
  Description: Avoid excessive block nesting
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#three-is-the-number-thou-shalt-count
  Enabled: false
  Max: 3

Metrics/ClassLength:
  Enabled: false

Metrics/CyclomaticComplexity:
  Description: A complexity metric that is strongly correlated to the number of test
    cases needed to validate a method.
  Enabled: false
  Max: 6

Metrics/MethodLength:
  Enabled: false

Metrics/ModuleLength:
  Description: Avoid modules longer than 100 lines of code.
  Enabled: false
  CountComments: false
  Max: 100

Metrics/LineLength:
  Max: 122
  AllowURI: true

Metrics/ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#too-many-params
  Enabled: false
  Max: 5
  CountKeywordArgs: true

Metrics/PerceivedComplexity:
  Description: A complexity metric geared towards measuring complexity for a human reader.
  Enabled: false
  Max: 7

Naming/MethodParameterName:
  Description: >-
              Checks for method parameter names that contain capital letters,
              end in numbers, or do not meet a minimal length.
  Enabled: false

Naming/VariableNumber:
  Enabled: false

Security/Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true

Security/JSONLoad:
  Enabled: false

Security/MarshalLoad:
  Enabled: false

Security/Open:
  Description: 'The use of Kernel#open represents a serious security risk.'
  Enabled: false

Security/YAMLLoad:
  Enabled: false

# Supports --auto-correct
Style/Alias:
  Description: Use alias_method instead of alias.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#alias-method
  Enabled: false

# Supports --auto-correct
Style/AndOr:
  Description: Use &&/|| instead of and/or.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-and-or-or
  Enabled: true
  EnforcedStyle: always
  SupportedStyles:
  - always
  - conditionals

# Supports --auto-correct
Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#array-join
  Enabled: true

# Supports --auto-correct
Style/ClassMethods:
  Description: Use self when defining module/class methods.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#def-self-class-methods
  Enabled: false

Style/ClassVars:
  Description: Avoid the use of class variables.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-class-vars
  Enabled: true

Style/Documentation:
  Enabled: false

Style/DocumentationMethod:
  Enabled: false

Style/DoubleNegation:
  Description: Checks for uses of double negation (!!).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-bang-bang
  Enabled: false

Style/EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: false

# Supports --auto-correct
Style/EmptyElse:
  Description: Avoid empty else-clauses.
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
  - empty
  - nil
  - BlockLength

Style/EmptyMethod:
  Enabled: false

Style/For:
  Description: Checks use of for or each in multiline loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-for-loops
  Enabled: false
  EnforcedStyle: each
  SupportedStyles:
  - for
  - each

# Supports --auto-correct
Style/FrozenStringLiteralComment:
  Description: Add the frozen_string_literal comment to the top of files to help transition
    from Ruby 2.3.0 to Ruby 3.0.
  Enabled: false
  SupportedStyles:
  - always

Style/HashSyntax:
  Enabled: false

Style/IfInsideElse:
  Description: Finds if nodes inside else, which can be converted to elsif.
  Enabled: false

# Don't force trailing if/unless for single-line conditionals
Style/IfWithSemicolon:
  Description: Do not use if x; .... Use the ternary operator instead.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon-ifs
  Enabled: true

# Supports --auto-correct
Style/InfiniteLoop:
  Description: Use Kernel#loop for infinite loops.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#infinite-loop
  Enabled: false

# Supports --auto-correct
Style/Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#lambda-multi-line
  Enabled: false

# Supports --auto-correct
Style/LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc-call
  Enabled: true
  EnforcedStyle: call
  SupportedStyles:
  - call
  - braces

# Supports --auto-correct
Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-args-no-parens
  Enabled: true

# Supports --auto-correct
Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: true
  EnforcedStyle: require_parentheses
  SupportedStyles:
  - require_parentheses
  - require_no_parentheses

Style/MixinUsage:
  Description: This cop checks that `include`, `extend` and `prepend` exists at the top level.
    Using these at the top level affects the behavior of `Object`. There will not be using
    `include`, `extend` and `prepend` at the top level. Let's use it inside `class` or `module`.
  Enabled: false

# Supports --auto-correct
Style/MutableConstant:
  Description: Do not assign mutable objects to constants.
  Enabled: true

Style/NestedParenthesizedCalls:
  Description: Parenthesize method calls which are nested inside the argument list of
    another parenthesized method call.
  Enabled: true

Style/NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-ternary
  Enabled: true

Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-nested-conditionals
  Enabled: false
  EnforcedStyle: skip_modifier_ifs
  MinBodyLength: 3
  SupportedStyles:
  - skip_modifier_ifs
  - always

# Supports --auto-correct
Style/NilComparison:
  Description: Prefer x.nil? to x == nil.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#predicate-methods
  Enabled: true

# Supports --auto-correct
Style/NonNilCheck:
  Description: Checks for redundant nil checks.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-non-nil-checks
  Enabled: true
  IncludeSemanticChanges: false

# Supports --auto-correct
Style/Not:
  Description: Use ! instead of not.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#bang-not-not
  Enabled: true

# I don't like this style.
Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#underscores-in-numerics
  Enabled: false

Style/OptionHash:
  Description: Don't use option hashes when you can use keyword arguments.
  Enabled: false
  SuspiciousParamNames:
  - options
  - opts
  - args
  - params
  - parameters

# Supports --auto-correct
Style/ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-parens-if
  Enabled: true
  AllowSafeAssignment: true

# Supports --auto-correct
Style/PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-literal-braces
  Enabled: true
  PreferredDelimiters:
    ! '%': ()
    ! '%i': ()
    ! '%q': ()
    ! '%Q': ()
    ! '%r': ! '{}'
    ! '%s': ()
    ! '%w': ()
    ! '%W': ()
    ! '%x': ()

# Supports --auto-correct
Style/Proc:
  Description: Use proc instead of Proc.new.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#proc
  Enabled: false

# Supports --auto-correct
Style/RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#begin-implicit
  Enabled: true

# Supports --auto-correct
Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true

# Supports --auto-correct
Style/RedundantParentheses:
  Description: Checks for parentheses that seem not to serve any purpose.
  Enabled: true

# Supports --auto-correct
Style/RedundantReturn:
  Description: Don't use return where it's not required.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-return
  Enabled: true
  AllowMultipleReturnValues: false

# Supports --auto-correct
Style/RedundantSelf:
  Description: Don't use self where it's not needed.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-self-unless-required
  Enabled: true

# Supports --auto-correct
Style/RegexpLiteral:
  Description: Use / or %r around regular expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#percent-r
  Enabled: false
  EnforcedStyle: slashes
  SupportedStyles:
  - slashes
  - percent_r
  - mixed
  AllowInnerSlashes: false

# Supports --auto-correct
Style/RescueModifier:
  Description: Avoid using rescue in its modifier form.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-rescue-modifiers
  Enabled: true

Style/SafeNavigation:
  Enabled: false

# Supports --auto-correct
Style/Semicolon:
  Description: Don't use semicolons to terminate expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon
  Enabled: true
  AllowAsExpressionSeparator: false

# Supports --auto-correct
Style/SignalException:
  Description: Checks for proper usage of fail and raise.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#fail-method
  Enabled: false
  EnforcedStyle: semantic
  SupportedStyles:
  - only_raise
  - only_fail
  - semantic

Style/StringLiterals:
  Description: Allow double-quoted strings without interpolation
  Enabled: false

# Supports --auto-correct
Style/StringLiteralsInInterpolation:
  Description: Checks if uses of quotes inside expressions in interpolated strings match
    the configured preference.
  Enabled: false
  EnforcedStyle: single_quotes
  SupportedStyles:
  - single_quotes
  - double_quotes

# Supports --auto-correct
Style/RedundantInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: false
